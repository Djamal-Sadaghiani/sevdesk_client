require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ContactFieldApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ContactFieldApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ContactFieldApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContactFieldApi' do
    it 'should create an instance of ContactFieldApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ContactFieldApi)
    end
  end

  # unit tests for create_contact_field
  # Create contact field
  # Create contact field
  # @param [Hash] opts the optional parameters
  # @option opts [ModelContactCustomField] :model_contact_custom_field 
  # @return [ModelContactCustomFieldResponse]
  describe 'create_contact_field test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_contact_field_setting
  # Create contact field setting
  # Create contact field setting
  # @param [Hash] opts the optional parameters
  # @option opts [ModelContactCustomFieldSetting] :model_contact_custom_field_setting 
  # @return [GetContactFieldSettings200Response]
  describe 'create_contact_field_setting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_contact_custom_field_id
  # delete a contact field
  # @param contact_custom_field_id Id of contact field
  # @param [Hash] opts the optional parameters
  # @return [DeleteCheckAccount200Response]
  describe 'delete_contact_custom_field_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_contact_field_setting
  # Deletes a contact field setting
  # @param contact_custom_field_setting_id Id of contact field to delete
  # @param [Hash] opts the optional parameters
  # @return [DeleteCheckAccount200Response]
  describe 'delete_contact_field_setting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_contact_field_setting_by_id
  # Find contact field setting by ID
  # Returns a single contact field setting
  # @param contact_custom_field_setting_id ID of contact field to return
  # @param [Hash] opts the optional parameters
  # @return [GetContactFieldSettings200Response]
  describe 'get_contact_field_setting_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_contact_field_settings
  # Retrieve contact field settings
  # Retrieve all contact field settings
  # @param [Hash] opts the optional parameters
  # @return [GetContactFieldSettings200Response]
  describe 'get_contact_field_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_contact_fields
  # Retrieve contact fields
  # Retrieve all contact fields
  # @param [Hash] opts the optional parameters
  # @return [GetContactFields200Response]
  describe 'get_contact_fields test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_contact_fields_by_id
  # Retrieve contact fields
  # Retrieve all contact fields
  # @param contact_custom_field_id id of the contact field
  # @param [Hash] opts the optional parameters
  # @return [GetContactFields200Response]
  describe 'get_contact_fields_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_placeholder
  # Retrieve Placeholders
  # Retrieve all Placeholders
  # @param object_name Model name
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sub_object_name Sub model name, required if you have \&quot;Email\&quot; at objectName
  # @return [GetPlaceholder200Response]
  describe 'get_placeholder test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_reference_count
  # Receive count reference
  # Receive count reference
  # @param contact_custom_field_setting_id ID of contact field you want to get the reference count
  # @param [Hash] opts the optional parameters
  # @return [GetReferenceCount200Response]
  describe 'get_reference_count test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_contact_field_setting
  # Update contact field setting
  # Update an existing contact field  setting
  # @param contact_custom_field_setting_id ID of contact field setting you want to update
  # @param [Hash] opts the optional parameters
  # @option opts [ModelContactCustomFieldSettingUpdate] :model_contact_custom_field_setting_update 
  # @return [ModelContactCustomFieldSettingResponse]
  describe 'update_contact_field_setting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_contactfield
  # Update a contact field
  # Update a contact field
  # @param contact_custom_field_id id of the contact field
  # @param [Hash] opts the optional parameters
  # @option opts [ModelContactCustomFieldUpdate] :model_contact_custom_field_update Update data
  # @return [ModelContactCustomFieldResponse]
  describe 'update_contactfield test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
