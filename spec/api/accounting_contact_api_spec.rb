require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::AccountingContactApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AccountingContactApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::AccountingContactApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountingContactApi' do
    it 'should create an instance of AccountingContactApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::AccountingContactApi)
    end
  end

  # unit tests for create_accounting_contact
  # Create a new accounting contact
  # Creates a new accounting contact.
  # @param [Hash] opts the optional parameters
  # @option opts [ModelAccountingContact] :model_accounting_contact Creation data
  # @return [ModelAccountingContactResponse]
  describe 'create_accounting_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_accounting_contact
  # Deletes an accounting contact
  # Attention, deleting an existing AccountingContact can lead to **booking errors**, especially in the **DATEV export**. Compatibility of sevdesk with DATEV is no longer guaranteed.
  # @param accounting_contact_id Id of accounting contact resource to delete
  # @param [Hash] opts the optional parameters
  # @return [DeleteCheckAccount200Response]
  describe 'delete_accounting_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_accounting_contact
  # Retrieve accounting contact
  # Returns all accounting contact which have been added up until now. Filters can be added.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :contact_id ID of contact for which you want the accounting contact.
  # @option opts [String] :contact_object_name Object name. Only needed if you also defined the ID of a contact.
  # @return [GetAccountingContact200Response]
  describe 'get_accounting_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_accounting_contact_by_id
  # Find accounting contact by ID
  # Returns a single accounting contac
  # @param accounting_contact_id ID of accounting contact to return
  # @param [Hash] opts the optional parameters
  # @return [GetAccountingContact200Response]
  describe 'get_accounting_contact_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_accounting_contact
  # Update an existing accounting contact
  # Attention, updating an existing AccountingContact can lead to **booking errors**, especially in the **DATEV export**. Compatibility of sevdesk with DATEV is no longer guaranteed.
  # @param accounting_contact_id ID of accounting contact to update
  # @param [Hash] opts the optional parameters
  # @option opts [ModelAccountingContactUpdate] :model_accounting_contact_update Update data
  # @return [ModelAccountingContactResponse]
  describe 'update_accounting_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
