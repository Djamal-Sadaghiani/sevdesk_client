require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::TagApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TagApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::TagApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TagApi' do
    it 'should create an instance of TagApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::TagApi)
    end
  end

  # unit tests for create_tag
  # Create a new tag
  # Create a new tag
  # @param [Hash] opts the optional parameters
  # @option opts [CreateTagRequest] :create_tag_request 
  # @return [ModelTagCreateResponse]
  describe 'create_tag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_tag
  # Deletes a tag
  # @param tag_id Id of tag to delete
  # @param [Hash] opts the optional parameters
  # @return [DeleteCheckAccount200Response]
  describe 'delete_tag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_tag_by_id
  # Find tag by ID
  # Returns a single tag
  # @param tag_id ID of tag to return
  # @param [Hash] opts the optional parameters
  # @return [GetTags200Response]
  describe 'get_tag_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_tag_relations
  # Retrieve tag relations
  # Retrieve all tag relations
  # @param [Hash] opts the optional parameters
  # @return [GetTagRelations200Response]
  describe 'get_tag_relations test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_tags
  # Retrieve tags
  # Retrieve all tags
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :id ID of the Tag
  # @option opts [String] :name Name of the Tag
  # @return [GetTags200Response]
  describe 'get_tags test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_tag
  # Update tag
  # Update an existing tag
  # @param tag_id ID of tag you want to update
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateTagRequest] :update_tag_request 
  # @return [ModelTagResponse]
  describe 'update_tag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
