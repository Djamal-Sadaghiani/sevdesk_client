require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ContactApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ContactApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ContactApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContactApi' do
    it 'should create an instance of ContactApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ContactApi)
    end
  end

  # unit tests for contact_customer_number_availability_check
  # Check if a customer number is available
  # Checks if a given customer number is available or already used.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :customer_number The customer number to be checked.
  # @return [ContactCustomerNumberAvailabilityCheck200Response]
  describe 'contact_customer_number_availability_check test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_contact
  # Create a new contact
  # Creates a new contact.&lt;br&gt;       For adding addresses and communication ways, you will need to use the ContactAddress and CommunicationWay endpoints.
  # @param [Hash] opts the optional parameters
  # @option opts [ModelContact] :model_contact Creation data
  # @return [ModelContactResponse]
  describe 'create_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_contact
  # Deletes a contact
  # @param contact_id Id of contact resource to delete
  # @param [Hash] opts the optional parameters
  # @return [DeleteCheckAccount200Response]
  describe 'delete_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_contacts_by_custom_field_value
  # Find contacts by custom field value
  # Returns an array of contacts having a certain custom field value set.
  # @param value The value to be checked.
  # @param custom_field_name The ContactCustomFieldSetting name, if no ContactCustomFieldSetting is provided.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :custom_field_setting_id ID of ContactCustomFieldSetting for which the value has to be checked.
  # @option opts [String] :custom_field_setting_object_name Object name. Only needed if you also defined the ID of a ContactCustomFieldSetting.
  # @return [FindContactsByCustomFieldValue200Response]
  describe 'find_contacts_by_custom_field_value test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_contact_by_id
  # Find contact by ID
  # Returns a single contact
  # @param contact_id ID of contact to return
  # @param [Hash] opts the optional parameters
  # @return [FindContactsByCustomFieldValue200Response]
  describe 'get_contact_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_contact_tabs_item_count_by_id
  # Get number of all items
  # Get number of all invoices, orders, etc. of a specified contact
  # @param contact_id ID of contact to return
  # @param [Hash] opts the optional parameters
  # @return [GetContactTabsItemCountById200Response]
  describe 'get_contact_tabs_item_count_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_contacts
  # Retrieve contacts
  # There are a multitude of parameter which can be used to filter.&lt;br&gt;       A few of them are attached but       for a complete list please check out &lt;a href&#x3D;&#39;#tag/Contact/How-to-filter-for-certain-contacts&#39;&gt;this&lt;/a&gt; list
  # @param [Hash] opts the optional parameters
  # @option opts [String] :depth Defines if both organizations &lt;b&gt;and&lt;/b&gt; persons should be returned.&lt;br&gt;       &#39;0&#39; -&gt; only organizations, &#39;1&#39; -&gt; organizations and persons
  # @option opts [String] :customer_number Retrieve all contacts with this customer number
  # @return [FindContactsByCustomFieldValue200Response]
  describe 'get_contacts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_next_customer_number
  # Get next free customer number
  # Retrieves the next available customer number. Avoids duplicates.
  # @param [Hash] opts the optional parameters
  # @return [GetNextCustomerNumber200Response]
  describe 'get_next_customer_number test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_contact
  # Update a existing contact
  # Update a contact
  # @param contact_id ID of contact to update
  # @param [Hash] opts the optional parameters
  # @option opts [ModelContactUpdate] :model_contact_update Update data
  # @return [ModelContactResponse]
  describe 'update_contact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
